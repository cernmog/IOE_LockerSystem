{"version":3,"sources":["components/Fact/Fact.js","components/DailyPanel/DailyPanel.js","components/Chart/Chart.js","components/Power/Power.js","components/GraphPanel/GraphPanel.js","components/Auth/Auth.js","components/Dashboard/Dashboard.js","components/Login/Login.js","workers/serviceWorker.js","index.js"],"names":["Fact","react_default","a","createElement","this","props","fact","Component","DailyPanel","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","result","_this2","fetch","then","res","json","setState","error","console","log","item","keyFacts","map","components_Fact_Fact","key","id","Math","floor","random","length","className","Chart","updateChart","bind","assertThisInitialized","daysInMonth","month","year","Date","getDate","datepub","x","date","getMonth","getFullYear","data1","days","push","substr","obj","i","j","assign","defineProperty","minutes","undefined","hasOwnProperty","chart","c3","generate","bindto","ident","data","columns","names","types","chartType","axis","colors","inner","type","label","text","position","tick","format","y","min","padding","top","bottom","interaction","enabled","load","defaultProps","Power","max","GraphPanel","pubnub","channel","PubNub","publishKey","subscribeKey","prevState","history","count","status","response","messages","ceil","hours","getHours","getMinutes","seconds","getSeconds","day","startTime","moment","firstStartTime","offset","ranges","endTime","diff","range","components_Chart_Chart","components_Power_Power","Auth","authenticate","formData","form","FormData","set","username","password","Promise","resolve","reject","method","headers","Accept","mode","body","catch","setSession","localStorage","setItem","session","signout","callback","removeItem","getItem","isAuthenticated","AuthButton","withRouter","_ref","NavItem","onClick","Dashboard","window","clearTimeout","timeout","setTimeout","location","reload","Navbar","inverse","Header","Brand","Toggle","Collapse","Nav","pullRight","Grid","Row","Col","md","components_GraphPanel_GraphPanel","components_DailyPanel_DailyPanel","Login","self","redirectToReferrer","onChange","event","target","name","value","react_router","to","FormGroup","ControlLabel","htmlFor","FormControl","Button","Boolean","hostname","match","ReactDOM","render","react_router_dom","exact","path","component","rest","objectWithoutProperties","pathname","from","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e4b7b7cc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Fact extends Component {\r\n  render() {\r\n    return (\r\n      <p>{this.props.fact}</p>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fact;","import React, { Component } from 'react';\nimport Fact from '../Fact/Fact'\n\nclass DailyPanel extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      result: null\n    }\n  }\n\n  componentDidMount() {                               \n    fetch(\"/dailyFacts.json\") // http request using a promise\n    .then(res => res.json())\n    .then(\n      (result) => {\n        this.setState({\n          result: result\n        });\n      },\n      (error) => {\n        console.log(error);\n      }\n    )\n  }\n\n  render() {\n    let item = null;\n\n    if (this.state.result) {\n      const keyFacts = this.state.result.map(fact => <Fact key={fact.id} fact={fact.fact}></Fact>); //creating fact component with props \n      item = keyFacts[Math.floor(Math.random() * keyFacts.length)];\n    }\n\n    return (\n      <div className=\"daily panel panel-default\">\n        <div className=\"panel-body\">\n          <h2>Random Fact</h2>\n          {item}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DailyPanel;\n","import React, { Component } from 'react';\r\nimport c3 from 'c3';\r\n\r\nclass Chart extends Component {\r\n    constructor() {\r\n        super();\r\n        this.updateChart = this.updateChart.bind(this);\r\n        this.daysInMonth = this.daysInMonth.bind(this);\r\n    }\r\n\r\n    daysInMonth(month, year) {\r\n        return new Date(year, month, 0).getDate();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n      if (this.props.datepub.length > 0) {\r\n        let x = [\"x\"];\r\n        let date = new Date();\r\n        let daysInMonth = this.daysInMonth(date.getMonth(), date.getFullYear());\r\n        let month = \"0\" + (date.getMonth() + 1);\r\n        let data1 = [\"data1\"];\r\n\r\n        for (let days = 1; days < daysInMonth; days++) {\r\n            days = \"0\" + days;\r\n            x.push(date.getFullYear() + \"-\" +  month.substr(-2) + \"-\" +  days.substr(-2));\r\n        }\r\n\r\n        let obj = {};\r\n\r\n        for (let i = 1; i < x.length; i++) {\r\n          for (let j = 0; j < this.props.datepub.length; j++) {\r\n            if (this.props.datepub[j].date === x[i]) {\r\n              obj = Object.assign({}, obj, {\r\n                [x[i]]: this.props.datepub[j].minutes\r\n              })\r\n            } else {\r\n              if (obj[x[i]] === undefined) {\r\n                obj = Object.assign({}, obj, {\r\n                  [x[i]]: 0\r\n                });\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        for (var key in obj) {\r\n          if (obj.hasOwnProperty(key)) { \r\n              data1.push(obj[key])        \r\n          }\r\n        }\r\n\r\n        this.chart = c3.generate({\r\n            bindto: '#' + this.props.ident,\r\n            data: {\r\n                x: 'x',\r\n                columns: [\r\n                    x,\r\n                    data1\r\n                ],\r\n                names: {\r\n                  data1: 'Device',\r\n                },\r\n                types: {\r\n                  data1: this.props.chartType,\r\n                },\r\n                axis: {\r\n                  data1: 'y'\r\n                },\r\n                colors: {\r\n                  data1: '#ccc'\r\n                }\r\n            },\r\n            axis: {\r\n                x: {\r\n                    inner: false,\r\n                    type: 'timeseries',\r\n                    label: {\r\n                      text: 'Date of charge',\r\n                      position: 'outer-middle'\r\n                    },\r\n                    tick: {\r\n                        format: '%a, %B %d'\r\n                    }\r\n                },\r\n                y: {\r\n                  min: 0,\r\n                  padding: {top: 10, bottom: 0},\r\n                  label: {\r\n                    text: 'Charge time (minutes)',\r\n                    position: 'outer-middle'\r\n                  }\r\n                }\r\n            },\r\n            interaction: {\r\n              enabled: true\r\n            }\r\n        });\r\n\r\n        this.updateChart();\r\n      }\r\n    }\r\n\r\n    updateChart() {\r\n      this.chart.load({type: this.props.chartType});\r\n    }\r\n\r\n    render() {\r\n      return <div id={this.props.ident}></div>;    \r\n    }\r\n   }\r\n\r\n   Chart.defaultProps = {\r\n    chartType: 'spline'\r\n   }\r\n   \r\n   export default Chart;\r\n","import React, { Component } from 'react';\r\nimport c3 from 'c3';\r\n\r\nclass Power extends Component {\r\n    constructor() {\r\n        super();\r\n        this.updateChart = this.updateChart.bind(this);\r\n        this.daysInMonth = this.daysInMonth.bind(this);\r\n    }\r\n\r\n    daysInMonth(month, year) {\r\n        return new Date(year, month, 0).getDate();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n      if (this.props.datepub.length > 0) {\r\n        let x = [\"x\"];\r\n        let date = new Date();\r\n        let daysInMonth = this.daysInMonth(date.getMonth(), date.getFullYear());\r\n        let month = \"0\" + (date.getMonth() + 1);\r\n        let data1 = [\"data1\"];\r\n\r\n        for (let days = 1; days < daysInMonth; days++) {\r\n            days = \"0\" + days;\r\n            x.push(date.getFullYear() + \"-\" +  month.substr(-2) + \"-\" +  days.substr(-2));\r\n        }\r\n        \r\n        let obj = {};\r\n\r\n        for (let i = 1; i < x.length; i++) {\r\n          for (let j = 0; j < this.props.datepub.length; j++) {\r\n            if (this.props.datepub[j].date === x[i]) {\r\n              obj = Object.assign({}, obj, {\r\n                [x[i]]: this.props.datepub[j].minutes\r\n              })\r\n            } else {\r\n              if (obj[x[i]] === undefined) {\r\n                obj = Object.assign({}, obj, {\r\n                  [x[i]]: 0\r\n                });\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        for (var key in obj) {\r\n          if (obj.hasOwnProperty(key)) { \r\n              data1.push(Math.floor(obj[key] * 0.7))        \r\n          }\r\n        }\r\n\r\n        this.chart = c3.generate({\r\n            bindto: '#' + this.props.ident,\r\n            data: {\r\n                x: 'x',\r\n                columns: [\r\n                    x,\r\n                    data1\r\n                ],\r\n                names: {\r\n                  data1: 'Device',\r\n                },\r\n                types: {\r\n                    data1: this.props.chartType,\r\n                },\r\n                axis: {\r\n                  data1: 'y'\r\n                },\r\n                colors: {\r\n                  data1: '#ccc'\r\n                }\r\n            },\r\n            axis: {\r\n                x: {\r\n                    inner: false,\r\n                    type: 'timeseries',\r\n                    label: {\r\n                      text: 'Date of charge',\r\n                      position: 'outer-middle'\r\n                    },\r\n                    tick: {\r\n                        format: '%a, %B %d'\r\n                    }\r\n                },\r\n                y: {\r\n                  min: 0,\r\n                  max: 100,\r\n                  padding: {top: 10, bottom: 0},\r\n                  label: {\r\n                    text: 'Charge amout (%)',\r\n                    position: 'outer-middle'\r\n                  }\r\n                }\r\n            },\r\n            interaction: {\r\n              enabled: true\r\n            }\r\n        });\r\n\r\n        this.updateChart();\r\n      }\r\n    }\r\n\r\n    updateChart() {\r\n      this.chart.load({type: this.props.chartType});\r\n    }\r\n\r\n    render() {\r\n      return <div id={this.props.ident}></div>;    \r\n    }\r\n   }\r\n\r\n   Power.defaultProps = {\r\n    chartType: 'bar'\r\n   }\r\n   \r\n   export default Power;\r\n","import React, { Component } from 'react';\nimport PubNub from 'pubnub';\nimport Chart from '../Chart/Chart';\nimport Power from '../Power/Power';\nimport moment from 'moment'\n\nclass GraphPanel extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      chartType: 'spline',\n      datepub: [],\n      pubnub: null,\n      channel: 'ChannelMate'\n    };\n  }\n\n  componentDidMount() {\n    let pubnub = new PubNub({\n      publishKey: 'pub-c-76d1d259-d00d-41ab-8bbe-78ba591eaf21',\n      subscribeKey: 'sub-c-8a024ae2-3909-11e9-b682-2a55d2175413'\n    });\n\n    this.setState((prevState) => ({\n      chartType: prevState.chartType,\n      datepub: prevState.datepub,\n      pubnub: pubnub,\n      channel: prevState.channel\n    }));\n\n    pubnub.history({\n      channel : 'ChannelMate',\n      count : 360\n    },\n      ((status, response) => {\n        let datepub = [[]];\n\n        for(let i = 0; i < response.messages.length; i++) {\n          datepub[0][i] = Math.ceil(+response.messages[i]['timetoken'] / 10000); //reading response messages into array\n\n          // Create a new JavaScript Date object based on the timestamp\n          // multiplied by 1000 so that the argument is in milliseconds, not seconds.\n          let date = new Date(datepub[0][i]);\n          let hours = \"0\" + date.getHours();\n          let minutes = \"0\" + date.getMinutes();\n          let seconds = \"0\" + date.getSeconds();\n          let day = \"0\" + date.getDate();\n          let month = \"0\" + (date.getMonth() + 1);\n\n          datepub[0][i] = date.getFullYear() + \"-\" +  month.substr(-2) + \"-\" +  day.substr(-2) + \" \" + hours.substr(-2) + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n        }\n\n        let startTime = moment(datepub[0][0]);\n        let firstStartTime = moment(datepub[0][0]).hours(0).minutes(0).seconds(0);\n        let seconds = 0;\n        let offset = 0;\n        let ranges = [];\n\n        for (let i = 1; i < datepub[0].length; i++) {\n          let endTime = moment(datepub[0][i]);\n          let days = endTime.diff(firstStartTime, 'days');\n\n          if (days === 0) {\n            seconds = endTime.diff(startTime, 'seconds');\n          } else {\n            firstStartTime = moment(datepub[0][i]).hours(0).minutes(0).seconds(0);\n            offset++;\n            startTime = moment(datepub[0][i]);\n            seconds = 0;\n          }\n\n          let range = {\n            date: startTime.format(\"YYYY-MM-DD\"),\n            minutes: Math.ceil(seconds / 60)\n          };\n\n          ranges[offset] = range;\n        }\n\n        this.setState((prevState) => ({\n          chartType: prevState.chartType,\n          datepub: ranges,\n          pubnub: prevState.pubnub,\n          channel: prevState.channel\n        }));\n      })\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"graph panel panel-default\">\n          <div className=\"panel-body\">\n            <h3>How long the device charged for</h3>\n            <div id=\"myChart\">\n              <Chart ident=\"chart1\" datepub={this.state.datepub} pubnub={this.state.pubnub} channel={this.state.channel} chartType={\"scatter\"}/>\n            </div>\n          </div>\n        </div>\n        <div className=\"graph panel panel-default\">\n        <div className=\"panel-body\">\n          <h3>Estimated amout of charge gained in time</h3>\n          <div id=\"myChart2\">\n            <Power ident=\"chart2\" datepub={this.state.datepub} pubnub={this.state.pubnub} channel={this.state.channel} chartType={\"bar\"}/>\n          </div>\n        </div>\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default GraphPanel;\n","\r\nconst Auth = {\r\n    authenticate(formData) {\r\n        let form = new FormData();\r\n        form.set(\"username\", formData.username);\r\n        form.set(\"password\", formData.password);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            fetch('https://victoria.venasoft.com/api.php', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json'\r\n                },\r\n                mode: 'cors',\r\n                body: form,\r\n            })\r\n            .then(response => response.json()).then((response) => {\r\n                resolve(response);\r\n            }).catch((error) => {\r\n                reject(error);\r\n            });\r\n        });\r\n    },\r\n    setSession(response) {\r\n        localStorage.setItem('session', response.session);\r\n        localStorage.setItem('authenticated', true);\r\n    },\r\n    signout(callback) {\r\n        localStorage.removeItem('authenticated');\r\n        localStorage.removeItem('session');\r\n        callback();\r\n    },\r\n    session() {\r\n        return localStorage.getItem('session');\r\n    },\r\n    isAuthenticated() {\r\n        if (localStorage.getItem('authenticated')) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n};\r\n\r\nexport default Auth;\r\n","import React, { Component } from 'react';\r\nimport { Grid, Row, Col, Navbar, Nav, NavItem } from 'react-bootstrap';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport DailyPanel from '../DailyPanel/DailyPanel';\r\nimport GraphPanel from '../GraphPanel/GraphPanel';\r\nimport Auth from '../Auth/Auth';\r\n\r\nconst AuthButton = withRouter(\r\n    ({ history }) =>\r\n      Auth.isAuthenticated ? (\r\n        <NavItem onClick={() => {\r\n            Auth.signout(() => history.push(\"/\"));\r\n        }}>Logout</NavItem>\r\n      ) : (\r\n        <div></div>\r\n    )\r\n);\r\n\r\nclass Dashboard extends Component {\r\n\r\n    componentWillUnmount() {\r\n        window.clearTimeout(this.timeout);\r\n    }\r\n\r\n  render() {\r\n\r\n    this.timeout = window.setTimeout(() => {\r\n        window.location.reload();\r\n    }, 60000);\r\n\r\n      return (\r\n        <div>\r\n            <Navbar inverse={true}>\r\n                <Navbar.Header>\r\n                    <Navbar.Brand>\r\n                        Phone App\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle />\r\n                </Navbar.Header>\r\n                <Navbar.Collapse>\r\n                    <Nav pullRight={true}>\r\n                        <AuthButton />\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n            <Grid>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <h1>Energy Efficiency Application</h1>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <GraphPanel />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={12} className=\"sep\"></Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <DailyPanel />\r\n                    </Col>\r\n                </Row>\r\n            </Grid>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\r\nimport { Grid, Row, Col, FormGroup, ControlLabel, FormControl, Button } from 'react-bootstrap';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Auth from '../Auth/Auth';\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onClick = this.onClick.bind(this);\r\n\r\n        this.state = {\r\n            redirectToReferrer: false,\r\n            username: null,\r\n            password: null\r\n        };\r\n    }\r\n  \r\n    onClick = () => {\r\n        const self = this;\r\n\r\n        Auth.authenticate({\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        })\r\n            .then((response) => {\r\n                Auth.setSession(response);\r\n                self.setState({ redirectToReferrer: true });\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n\r\n    onChange = event => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        let { redirectToReferrer } = this.state;\r\n\r\n        if (redirectToReferrer) {\r\n            return <Redirect to=\"/dashboard\" />;\r\n        }\r\n\r\n        return (\r\n            <Grid>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <h1>Login</h1>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <FormGroup>\r\n                            <ControlLabel htmlFor=\"username\">Username</ControlLabel>\r\n                            <FormControl id=\"username\" name=\"username\" type=\"text\" onChange={ this.onChange } />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <ControlLabel htmlFor=\"password\">Password</ControlLabel>\r\n                            <FormControl id=\"password\" name=\"password\" type=\"password\" onChange={ this.onChange } />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Button type=\"button\" className=\"btn btn-primary\" onClick={ this.onClick }>Sign in!</Button>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Login from './components/Login/Login';\nimport Auth from './components/Auth/Auth';\n\nimport './styles/index.css';\nimport * as serviceWorker from './workers/serviceWorker';\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          Auth.isAuthenticated() ? (\n            <Component {...props} />\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: { from: props.location }\n              }}\n            />\n          )\n        }\n      />\n    );\n}\n\nReactDOM.render(\n    <Router>\n        <Route exact path=\"/\" component={Login} />\n        <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n    </Router>\n, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}